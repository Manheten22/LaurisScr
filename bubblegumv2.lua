    --!strict
    local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

    -- –ñ—ë—Å—Ç–∫–æ –ø—Ä–æ–ø–∏—Å–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ç–∏–ø–æ–≤ —è–∏—Ü
    local eggTypes = {
        "nightmare-egg",
        "void-egg",
        "rainbow-egg",
        "event-1",
        "event-2",
        "aura-egg",
        "royal-chest"
    }

    local selectedEggs = {}
    local originalWalkSpeed
    local originalJumpPower
    local antiGravityForces = {}
    local movementConnection
    local SAFE_Y_LEVEL = -100
    local isTravelingToEgg = false
    local currentTargetEgg = nil
    -- –î–æ–±–∞–≤–∏–º –Ω–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
    local isAtTargetPosition = false
    local lastTargetPosition = nil

    -- –°–æ–∑–¥–∞–µ–º –∑–∞—â–∏—â–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    local config = {
        Name = "Lauria Script" or "Default Name", -- –ó–∞—â–∏—Ç–∞ –æ—Ç nil
        LoadingTitle = "Lauria Script Loading",
        LoadingSubtitle = "by Developer",
        ConfigurationSaving = {
            Enabled = true,
            FolderName = "LauriaConfig", -- –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä
            FileName = "LauriaSettings"  -- –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä
        },
        Discord = {
            Enabled = true,
            Invite = "https://discord.gg/WM7edScy" -- –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –≤–º–µ—Å—Ç–æ nil
        },
        KeySystem = false,
        Theme = "Default" -- –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–º—É
    }

    local Window = Rayfield:CreateWindow(config)

    -- –£–±–µ–¥–∏–º—Å—è —á—Ç–æ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–º–µ—é—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ñ–ª–∞–≥–∏
    local ElementsFlags = {
        AutoAttack = "AutoAttackFlag",
        AimAssist = "AimAssistFlag",
        NoFog = "NoFogFlag",
        Distance = "DistanceFlag"
    }

    -- Combat Tab
    local CombatTab = Window:CreateTab("Combat", "swords")

    -- Section: Attacking
    CombatTab:CreateSection("Attacking")
    CombatTab:CreateToggle({
        Name = "‚öî Auto Attack",
        CurrentValue = false,
        Flag = ElementsFlags.AutoAttack, -- –£–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ñ–ª–∞–≥
        Callback = function(Value)
            -- –õ–æ–≥–∏–∫–∞ –∞—Ç–∞–∫–∏
        end
    })

    -- Section: Aiming
    CombatTab:CreateSection("Aiming")
    CombatTab:CreateToggle({
        Name = "üéØ Look At Enemy",
        CurrentValue = false,
        Flag = ElementsFlags.AimAssist, -- –£–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ñ–ª–∞–≥
        Callback = function(Value)
            -- –õ–æ–≥–∏–∫–∞ –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏—è
        end
    })

    -- Visuals Tab
    local VisualsTab = Window:CreateTab("Visuals", "sparkles")
    VisualsTab:CreateSection("Effects")

    VisualsTab:CreateToggle({
        Name = "üå´ Remove Fog",
        CurrentValue = false,
        Flag = ElementsFlags.NoFog, -- –£–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ñ–ª–∞–≥
        Callback = function(Value)
            -- –õ–æ–≥–∏–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç—É–º–∞–Ω–∞
        end
    })
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Manheten22/LaurisScr/refs/heads/main/bubblegum.lua"))()  
    -- –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –≤–∫–ª–∞–¥–∫—É Autofarm
    local AutofarmTab = Window:CreateTab("Autofarm", "cog") -- –ò–∫–æ–Ω–∫–∞ —à–µ—Å—Ç–µ—Ä–µ–Ω–∫–∏
    local AutofarmSection = AutofarmTab:CreateSection("AutoFarm Settings")



-- –°–æ–∑–¥–∞—ë–º –¥—Ä–æ–ø–¥–∞—É–Ω –¥–ª—è –≤—ã–±–æ—Ä–∞ —è–∏—Ü
local EggDropdown = AutofarmTab:CreateDropdown({
    Name = "Select Eggs",
    Options = eggTypes,
    CurrentOption = {},
    MultipleOptions = true,
    Flag = "EggSelection",
    Callback = function(Options)
        selectedEggs = Options
print(selectedEggs)
    end
})

    -- –°–æ—Å—Ç–æ—è–Ω–∏—è Autofarm
    local autofarmEnabled = false
    local originalPosition = nil
    local currentTween = nil
    local isReturning = false

    -- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –ª—É—á—à–µ–≥–æ —è–π—Ü–∞
local function findBestEgg()
    local bestEgg = nil
    local maxLuck = 0
    
    local riftsFolder = workspace:WaitForChild("Rendered"):WaitForChild("Rifts")
    if not riftsFolder then 
        warn("Rifts folder not found!")
        return nil
    end

    print("Searching in Rifts folder. Children count:", #riftsFolder:GetChildren())
    print("Selected eggs:", table.concat(selectedEggs, ", "))

    for _, eggName in pairs(selectedEggs) do
        print("Checking egg type:", eggName)
        local egg = riftsFolder:FindFirstChild(eggName)
        
        if egg then
            print("Found egg instance:", egg:GetFullName())
            if egg:IsA("Model") then
                local display = egg:FindFirstChild("Display")
                local surfaceGui = display and display:FindFirstChild("SurfaceGui")
                local icon = surfaceGui and surfaceGui:FindFirstChild("Icon")
                local luck = icon and icon:FindFirstChild("Luck")
                
                if luck then
                    local luckText = luck.Text
                    local luckValue = tonumber(luckText:match("%d+")) or 0
                    print("Egg", eggName, "has luck:", luckValue)
                    
                    if luckValue > maxLuck then
                        maxLuck = luckValue
                        bestEgg = egg
                        print("New best egg:", eggName, "with luck:", luckValue)
                    end
                else
                    warn("Missing Luck component in", egg:GetFullName())
                end
            else
                warn("Found object but not Model:", egg.ClassName)
            end
        else
            print("Egg not found:", eggName)
        end
    end
    
    if bestEgg then
        -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        if not bestEgg:FindFirstChild("EggPlatformSpawn") then
            warn("EggPlatformSpawn missing in", bestEgg.Name)
            return nil
        end
    end
    return bestEgg
end

function moveToPosition(targetPos: Vector3, onReached: () -> ())
    local player = game.Players.LocalPlayer
    local character = player.Character
    if not character then return end

    local hrp = character:WaitForChild("HumanoidRootPart")
    local speed = 25

    -- –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    if connection then
        connection:Disconnect()
        connection = nil
    end

    connection = game["Run Service"].RenderStepped:Connect(function(dt)
        if not autofarmEnabled or isReturning then
            connection:Disconnect()
            return
        end

        local currentPos = hrp.Position
        local direction = (targetPos - currentPos).Unit
        local distance = (targetPos - currentPos).Magnitude

        if distance < 2 then
            connection:Disconnect()
            onReached()
            return
        end

        hrp.Velocity = direction * speed
    end)
end



local function returnToOriginalPosition()
    if not originalPosition then return end
    
    isReturning = true
    local hrp = game.Players.LocalPlayer.Character.HumanoidRootPart
    
    -- –í–∫–ª—é—á–∞–µ–º –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏—é –∏ –¥–≤–∏–∂–µ–Ω–∏–µ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞
    enableMovement()
    enableGravity()
    
    moveToPosition(Vector3.new(originalPosition.X, originalPosition.Y, originalPosition.Z), function()
        hrp.CFrame = CFrame.new(originalPosition)
        isReturning = false
    end)
end

local function disableMovement()
    local humanoid = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
    if humanoid then
        originalWalkSpeed = humanoid.WalkSpeed
        originalJumpPower = humanoid.JumpPower
        humanoid.WalkSpeed = 0
        humanoid.JumpPower = 0
    end
end

local function enableMovement()
    local humanoid = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
    if humanoid and originalWalkSpeed then
        humanoid.WalkSpeed = originalWalkSpeed
        humanoid.JumpPower = originalJumpPower
    end
end

local function disableGravity()
    local character = game.Players.LocalPlayer.Character
    for _, part in pairs(character:GetDescendants()) do
        if part:IsA("BasePart") and part.Mass > 0 then
            local mass = part:GetMass()
            local bodyForce = Instance.new("BodyForce")
            bodyForce.Force = Vector3.new(0, mass * workspace.Gravity, 0)
            bodyForce.Parent = part
            antiGravityForces[part] = bodyForce
        end
    end
end

local function enableGravity()
    for part, bodyForce in pairs(antiGravityForces) do
        if part:IsDescendantOf(game.Players.LocalPlayer.Character) then
            bodyForce:Destroy()
        end
    end
    antiGravityForces = {}
end

game.Players.LocalPlayer.CharacterAdded:Connect(function(character)
    if autofarmEnabled then
        character:WaitForChild("Humanoid")
        disableMovement()
        disableGravity()
    end
end)

    -- –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞
-- –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞
-- –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –ø–æ–∑–∏—Ü–∏–∏ —è–π—Ü–∞
local function getEggPosition(egg)
    -- –°–ø–æ—Å–æ–± 1: –ò—â–µ–º –ª—é–±—É—é —á–∞—Å—Ç—å —Å –∫–æ–ª–ª–∏–∑–∏–µ–π
    for _, part in pairs(egg:GetDescendants()) do
        if part:IsA("BasePart") and part.CanCollide then
            return part.WorldPivot.Position
        end
    end
    
    -- –°–ø–æ—Å–æ–± 2: –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–¥–µ–ª—å —Ü–µ–ª–∏–∫–æ–º
    if egg:IsA("Model") then
        local _, size = egg:GetBoundingBox()
        return egg:GetPivot().Position + Vector3.new(0, size.Y/2, 0)
    end
    
    -- –°–ø–æ—Å–æ–± 3: –†–µ–∑–µ—Ä–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
    return egg.WorldPivot.Position
end

local function teleportToEggSafely(targetCFrame)
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local root = character:WaitForChild("HumanoidRootPart")
    if not root then return end

    -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    local originalDestroyHeight = workspace.FallenPartsDestroyHeight
    workspace.FallenPartsDestroyHeight = -math.huge

    -- –¢–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—è –≤ —Ç—Ä–∏ —ç—Ç–∞–ø–∞
    root.CFrame = CFrame.new(root.Position.X, SAFE_Y_LEVEL, root.Position.Z) -- 1. –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π Y —É—Ä–æ–≤–µ–Ω—å
    task.wait(0.2)
    root.CFrame = CFrame.new(targetCFrame.X, SAFE_Y_LEVEL, targetCFrame.Z)   -- 2. –î–≤–∏–∂–µ–Ω–∏–µ –ø–æ X/Z
    task.wait(0.2)
    root.CFrame = targetCFrame                                                -- 3. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è

    -- –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ —Å–º–µ—Ä—Ç–∏
    character.AncestryChanged:Connect(function()
        if not character:IsDescendantOf(workspace) then
            task.wait(2)
            workspace.FallenPartsDestroyHeight = originalDestroyHeight
        end
    end)
end



-- –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞
local function startAutofarmProcess()
    while autofarmEnabled do
        task.wait(1)
        if isReturning then continue end

        local bestEgg = findBestEgg()
        if not bestEgg then
            -- –ï—Å–ª–∏ —è–π—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            returnToOriginalPosition()
            enableMovement()
            enableGravity()
            break
        end

        if bestEgg and bestEgg ~= currentTargetEgg then
            isTravelingToEgg = true
            currentTargetEgg = bestEgg
            lastTargetPosition = nil

            local hrp = game.Players.LocalPlayer.Character.HumanoidRootPart
            
            -- –ü–µ—Ä–≤–∏—á–Ω–∞—è —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—è –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å
            hrp.CFrame = CFrame.new(hrp.Position.X, SAFE_Y_LEVEL, hrp.Position.Z)
            task.wait(0.5)

            local eggPlatform = bestEgg:FindFirstChild("EggPlatformSpawn")
            if eggPlatform then
                local platformPart = eggPlatform:FindFirstChild("Part")
                if platformPart and platformPart:IsA("BasePart") then
                    local partPos = platformPart.CFrame.Position
                    lastTargetPosition = partPos
                    
                    -- –î–≤–∏–∂–µ–Ω–∏–µ –∫ X/Z –ø–æ–∑–∏—Ü–∏–∏
                    moveToPosition(Vector3.new(partPos.X, SAFE_Y_LEVEL, partPos.Z), function()
                        -- –§–∏–Ω–∏—à–Ω–∞—è —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—è
                        teleportToEggSafely(CFrame.new(partPos.X, partPos.Y + 1, partPos.Z))
                        isAtTargetPosition = true
                        
                        -- –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ–∑–∏—Ü–∏–∏
                        coroutine.wrap(function()
                            while autofarmEnabled and isAtTargetPosition do
                                local currentPos = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
                                local targetPos = Vector3.new(partPos.X, partPos.Y + 1, partPos.Z)
                                
                                -- –ï—Å–ª–∏ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç 5 –º–µ—Ç—Ä–æ–≤, –ø–æ–≤—Ç–æ—Ä—è–µ–º —Ç–µ–ª–µ–ø–æ—Ä—Ç
                                if (currentPos - targetPos).Magnitude > 5 then
                                    teleportToEggSafely(CFrame.new(targetPos))
                                end
                                
                                -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —è–π—Ü–∞
                                if not bestEgg:IsDescendantOf(workspace) then
                                    isAtTargetPosition = false
                                    isTravelingToEgg = false
                                    currentTargetEgg = nil
                                    return
                                end
                                
                                task.wait(1)
                            end
                        end)()
                    end)
                else
                    warn("Part not found")
                    resetState()
                end
            else
                warn("Platform not found")
                resetState()
            end
        end
    end
end

local function resetState()
    isTravelingToEgg = false
    currentTargetEgg = nil
    isAtTargetPosition = false
    lastTargetPosition = nil
end


-- –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å Autofarm
-- –í callback –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è
local AutofarmToggle = AutofarmTab:CreateToggle({
    Name = "Autofarm",
    CurrentValue = false,
    Flag = "AutofarmFlag",
    Callback = function(Value)
        autofarmEnabled = Value
        
        if Value then
            -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–∑–∏—Ü–∏—é –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
            local character = game.Players.LocalPlayer.Character
            if character then
                disableMovement()
                disableGravity()
                originalPosition = character.HumanoidRootPart.Position
            end
            startAutofarmProcess()
        else
            enableMovement()
            enableGravity()
            if currentTween then 
                currentTween:Cancel()
            end
            returnToOriginalPosition()
        end
    end
})

    -- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è —è–π—Ü–∞
-- –û–±–Ω–æ–≤–∏–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è —è–π—Ü–∞
workspace.Rendered.Rifts.ChildRemoved:Connect(function(child)
    if autofarmEnabled and table.find(selectedEggs, child.Name) then
        if child == currentTargetEgg then
            resetState()
            returnToOriginalPosition()
            
            -- –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞
            while isReturning do task.wait() end
            
            -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö —è–∏—Ü
            local newEgg = findBestEgg()
            if not newEgg then
                enableMovement()
                enableGravity()
            else
                startAutofarmProcess()
            end
        end
    end
end)
